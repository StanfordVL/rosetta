- Verify that for each object, this code handles the fact that `.pos()` returns the center location. Common pitfalls:
  - Not applying the right offsets when placing two objects relative to each other. E.g. half-width, radius, etc. 
- Verify that this code considers the physical attributes of each object and how they might offset target positions. Common pitfalls: 
  - Thickness of box walls 
- Verify that this code uses x as the front-back axis and y as the left-right axis. z is still the up-down axis.
- Verify that when applying penalties, this code does not OVER-penalize. For example, if slowness is required, set a low upper bound for speed, but do not penalize it entirely or the robot will be stalled.

1. Write out your verification step-by-step.
2. Edit the code as needed according to your explanation. Comment your changes.
3. Only output methods you are editing. 
4. If you are editing a method, output the whole method, not just your edits. 
5. Don't introduce new methods, not even helper methods. Just edit `compute_dense_reward` and `evaluate`. 